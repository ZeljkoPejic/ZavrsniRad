/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.pejic.zavrsnirad.view;

import hr.pejic.zavrsnirad.controller.ObradaAlergen;
import hr.pejic.zavrsnirad.controller.ObradaOsoba;
import hr.pejic.zavrsnirad.controller.ObradaSastojak;
import hr.pejic.zavrsnirad.model.Alergen;
import hr.pejic.zavrsnirad.model.Osoba;
import hr.pejic.zavrsnirad.model.Sastojak;
import hr.pejic.zavrsnirad.utility.BrisanjePoruke;
import hr.pejic.zavrsnirad.utility.Iznimka;
import hr.pejic.zavrsnirad.utility.PomocneMetode;
import java.awt.Image;
import java.io.File;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;

/**
 *
 * @author Pejić
 */
public class AlergenProzor extends javax.swing.JFrame {

    private final ObradaAlergen oa;
    private final ObradaOsoba oo;
    private final ObradaSastojak os;
    private Alergen alergen;
    private Osoba osoba;
    private Sastojak sastojak;
    private DefaultListModel<Alergen> m;

    /**
     * Creates new form AlergenProzor
     */
    public AlergenProzor() {
        initComponents();
        oa = new ObradaAlergen();
        oo = new ObradaOsoba();
        os = new ObradaSastojak();
        ucitajSvePodatke();        
        setTitle(Alergen.class.getSimpleName());
        setIconImage(new ImageIcon("Slike" + File.separator + "alergija.jpg").getImage().getScaledInstance(20, 15, Image.SCALE_AREA_AVERAGING));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTrazi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOpis = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAlergeni = new javax.swing.JList<>();
        btnDodaj = new javax.swing.JButton();
        btnIzmjena = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        lblIznimka = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstAlergeniSastojka = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstAlergeniOsobe = new javax.swing.JList<>();
        cbOsoba = new javax.swing.JComboBox<>();
        cbSastojak = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnUkloniAlergenOsobe = new javax.swing.JButton();
        btnUkloniAlergenSastojka = new javax.swing.JButton();
        lblPorukaZaAlergen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Traži");

        txtTrazi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTraziKeyReleased(evt);
            }
        });

        jLabel2.setText("Opis");

        txtOpis.setColumns(20);
        txtOpis.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        txtOpis.setRows(5);
        jScrollPane1.setViewportView(txtOpis);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Alergeni"));

        lstAlergeni.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstAlergeni.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAlergeniValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstAlergeni);

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnIzmjena.setText("Izmjena");
        btnIzmjena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmjenaActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel3.setText("Naziv");

        lblIznimka.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Alergeni"));

        jScrollPane3.setViewportView(lstAlergeniSastojka);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Alergeni"));

        jScrollPane4.setViewportView(lstAlergeniOsobe);

        cbOsoba.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOsobaItemStateChanged(evt);
            }
        });

        cbSastojak.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSastojakItemStateChanged(evt);
            }
        });

        jLabel4.setText("Osobe");

        jLabel5.setText("Sastojci");

        btnUkloniAlergenOsobe.setText("Ukloni alergen");
        btnUkloniAlergenOsobe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniAlergenOsobeActionPerformed(evt);
            }
        });

        btnUkloniAlergenSastojka.setText("Ukloni alergen");
        btnUkloniAlergenSastojka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniAlergenSastojkaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(txtTrazi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIzmjena))
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblIznimka, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(cbOsoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPorukaZaAlergen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSastojak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnUkloniAlergenOsobe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUkloniAlergenSastojka)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(cbOsoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTrazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblIznimka, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cbSastojak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPorukaZaAlergen, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUkloniAlergenSastojka)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnDodaj)
                                .addComponent(btnObrisi)
                                .addComponent(btnIzmjena)
                                .addComponent(btnUkloniAlergenOsobe)))))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstAlergeniValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAlergeniValueChanged
       
        alergen = lstAlergeni.getSelectedValue();
        if (alergen == null) {
            return;
        }
        //PomocneMetode.ocistiPolja(getContentPane());
        txtNaziv.setText(alergen.getNaziv());
        txtOpis.setText(alergen.getOpis());


    }//GEN-LAST:event_lstAlergeniValueChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        alergen = new Alergen();

        alergen.setNaziv(txtNaziv.getText());
        alergen.setOpis(txtOpis.getText());
        oa.setEntitet(alergen);
        
        try {
            oa.kreiraj();
            ucitajAlergene();
            PomocneMetode.ocistiPolja(getContentPane());
            lblIznimka.setText("Alergen je uspješno kreiran");
            new BrisanjePoruke(lblIznimka).start();
        } catch (Iznimka ex) {
            lblIznimka.setText(ex.getPoruka());
        }


    }//GEN-LAST:event_btnDodajActionPerformed

    private void txtTraziKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTraziKeyReleased
        traziAlergene();
    }//GEN-LAST:event_txtTraziKeyReleased

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        alergen = lstAlergeni.getSelectedValue();
        if (alergen == null) {
            lblIznimka.setText("Odaberite alergen za brisanje");
            return;
        }

        oa.setEntitet(alergen);
        try {
            oa.obrisi();
            lblIznimka.setText("Alergen uspješno obrisan");
            ucitajAlergene();
            PomocneMetode.ocistiPolja(getContentPane());
            new BrisanjePoruke(lblIznimka).start();

        } catch (Iznimka ex) {
            lblIznimka.setText(ex.getPoruka());            
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnIzmjenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmjenaActionPerformed
        alergen = lstAlergeni.getSelectedValue();
        if (alergen == null) {
            lblIznimka.setText("Odaberite alergen za izmjenu");
            return;
        }

        alergen.setNaziv(txtNaziv.getText());
        alergen.setOpis(txtOpis.getText());

        oa.setEntitet(alergen);
        try {
            oa.azuriraj();
            ucitajAlergene();
            lblIznimka.setText("Uspješna izmjena alergena");
            new BrisanjePoruke(lblIznimka).start();

        } catch (Iznimka ex) {
            lblIznimka.setText(ex.getPoruka());
        }
    }//GEN-LAST:event_btnIzmjenaActionPerformed

    private void cbOsobaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOsobaItemStateChanged
        osoba = (Osoba) cbOsoba.getSelectedItem();
        DefaultListModel<Alergen> model = new DefaultListModel<>();
        osoba.getAlergeniOsobe().forEach(a -> model.addElement(a));
        lstAlergeniOsobe.setModel(model);
    }//GEN-LAST:event_cbOsobaItemStateChanged

    private void cbSastojakItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSastojakItemStateChanged
        sastojak = (Sastojak) cbSastojak.getSelectedItem();
        DefaultListModel<Alergen> model = new DefaultListModel<>();
        sastojak.getAlergeniSastojak().forEach(a -> model.addElement(a));
        lstAlergeniSastojka.setModel(model);
    }//GEN-LAST:event_cbSastojakItemStateChanged

    private void btnUkloniAlergenOsobeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniAlergenOsobeActionPerformed

        List<Alergen> alergeni = lstAlergeniOsobe.getSelectedValuesList();
        if (alergeni.isEmpty()) {
            lblPorukaZaAlergen.setText("<html>Odaberite alergen<br>osobe koji želite<br>ukoniti");
            return;
        }
        DefaultListModel<Alergen> model = (DefaultListModel<Alergen>) lstAlergeniOsobe.getModel();
        for (Alergen a : alergeni) {
            for (int i = 0; i < model.size(); i++) {
                if (a.getId().equals(model.getElementAt(i).getId())) {
                    model.removeElementAt(i);
                    osoba.getAlergeniOsobe().remove(i);
                    break;
                }
            }
        }
        oo.setEntitet(osoba);
        oo.obrisiAlergenOsobe();
        lblPorukaZaAlergen.setText("<html>Uspješno uklonjen<br> alergen osobe");
        new BrisanjePoruke(lblPorukaZaAlergen).start();
        lstAlergeniOsobe.setModel(model);
        
    }//GEN-LAST:event_btnUkloniAlergenOsobeActionPerformed

    private void btnUkloniAlergenSastojkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniAlergenSastojkaActionPerformed
        List<Alergen> alergeni = lstAlergeniSastojka.getSelectedValuesList();
        if (alergeni.isEmpty()) {
            lblPorukaZaAlergen.setText("<html>Odaberite alergen<br>osobe koji želite<br>ukoniti");
            return;
        }
        DefaultListModel<Alergen> model = (DefaultListModel<Alergen>) lstAlergeniSastojka.getModel();
        for (Alergen a : alergeni) {
            for (int i = 0; i < model.size(); i++) {
                if (a.getId().equals(model.getElementAt(i).getId())) {
                    model.removeElementAt(i);
                    sastojak.getAlergeniSastojak().remove(i);
                    break;
                }
            }
        }
        os.setEntitet(sastojak);
        os.obrisiAlergenSastojka();
        lblPorukaZaAlergen.setText("<html>Uspješno uklonjen<br> alergen osobe");
        lstAlergeniSastojka.setModel(model);
    }//GEN-LAST:event_btnUkloniAlergenSastojkaActionPerformed

    private void ucitajAlergene() {
        m = new DefaultListModel<>();
        oa.ispis().forEach(a -> m.addElement(a));
        lstAlergeni.setModel(m);
    }

    private void traziAlergene() {
        m = new DefaultListModel<>();
        oa.ispis(txtTrazi.getText()).forEach(a -> m.addElement(a));
        lstAlergeni.setModel(m);
    }

    private void ucitajSvePodatke() {

        ucitajAlergene();

        DefaultComboBoxModel<Osoba> cbo = new DefaultComboBoxModel<>();
        DefaultComboBoxModel<Sastojak> cbs = new DefaultComboBoxModel<>();

        oo.ispis().forEach(o -> cbo.addElement(o));
        if (cbo.getSize() != 0) {
            DefaultListModel<Alergen> lstAO = new DefaultListModel<>();
            osoba = (Osoba) cbo.getSelectedItem();
            osoba.getAlergeniOsobe().forEach(a -> lstAO.addElement(a));
            lstAlergeniOsobe.setModel(lstAO);
        }
        os.ispis().forEach(s -> cbs.addElement(s));
        if (cbs.getSize() != 0) {
            DefaultListModel<Alergen> lstAS = new DefaultListModel<>();
            sastojak = (Sastojak) cbs.getSelectedItem();
            sastojak.getAlergeniSastojak().forEach(s -> lstAS.addElement(s));
            lstAlergeniSastojka.setModel(lstAS);
        }
        cbOsoba.setModel(cbo);
        cbSastojak.setModel(cbs);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmjena;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnUkloniAlergenOsobe;
    private javax.swing.JButton btnUkloniAlergenSastojka;
    private javax.swing.JComboBox<Osoba> cbOsoba;
    private javax.swing.JComboBox<Sastojak> cbSastojak;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblIznimka;
    private javax.swing.JLabel lblPorukaZaAlergen;
    private javax.swing.JList<Alergen> lstAlergeni;
    private javax.swing.JList<Alergen> lstAlergeniOsobe;
    private javax.swing.JList<Alergen> lstAlergeniSastojka;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextArea txtOpis;
    private javax.swing.JTextField txtTrazi;
    // End of variables declaration//GEN-END:variables
}
